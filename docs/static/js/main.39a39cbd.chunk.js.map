{"version":3,"sources":["component/ChatBalloon.tsx","data/converstaion.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["renderContents","chat","imageUri","hasLink","link","style","cursor","textDecoration","onClick","window","open","className","src","alt","height","paddingLeft","text","paddingRight","type","color","width","includes","split","map","t","ChatBalloon","key","isFromMe","isSystem","author","classNames","conversations","convertConversation","e","trim","brand","_","toLower","localStorage","getItem","price","replace","upperFirst","App","inputEl","useRef","chatContainerEl","chatContainerBottomEl","useState","conversation","setConversation","disableInput","setDisableInput","step","setStep","showModal","setShowModal","imageType","setImageType","init","a","queryString","qs","parse","location","search","ignoreQueryPrefix","toString","useEffect","current","focus","openModal","useCallback","setTimeout","forEach","c","i","slice","scrollToBottom","length","closeModal","scrollIntoView","behavior","sendMessage","value","toLowerCase","setItem","number","parseInt","conversationWithMine","concat","currentConversation","m","err","console","error","Modal","size","show","onHide","aria-labelledby","stopPropagation","animation","Body","ref","filter","toUpperCase","disabled","onKeyDown","onSubmit","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39a39cbd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport '../component/chatBalloon.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// @ts-ignore\nimport Loader from 'react-loader-spinner';\n\nconst renderContents: any = ({ chat, imageUri }: any) => {\n    const hasLink = chat && chat.link;\n\n    return (\n        <div\n            style={hasLink ? { cursor: 'pointer', textDecoration: 'underline' } : {}}\n            onClick={() => {\n                if (!hasLink) {\n                    return;\n                }\n\n                window.open(chat.link);\n            }}\n        >\n            {!imageUri ? (\n                <div />\n            ) : (\n                <div\n                    className=\"pointer\"\n                    // onClick={() => window.open(imageUri)}\n                >\n                    <img className=\"image\" src={imageUri} alt=\"chat_img\" />\n                </div>\n            )}\n            {hasLink ? <div style={{ height: 4 }} /> : <div />}\n            <div\n                style={\n                    hasLink\n                        ? { paddingLeft: 20 }\n                        : chat.text && chat.text === 'loading...'\n                        ? {\n                              paddingLeft: 20,\n                              paddingRight: 60,\n                          }\n                        : {}\n                }\n            >\n                {chat.text && chat.text === 'loading...' ? (\n                    <Loader type=\"ThreeDots\" color=\"#23549C\" height={24} width={40} />\n                ) : chat.text && chat.text.includes('\\n') ? (\n                    chat.text.split('\\n').map((t: any) => (\n                        <span style={{ textDecoration: hasLink ? 'underline' : 'none' }}>\n                            {t}\n                            <br />\n                        </span>\n                    ))\n                ) : (\n                    chat.text\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport const ChatBalloon = ({ key, chat, isFromMe, isSystem }: any) => {\n    const imageUri = chat.imageUri;\n\n    if (isSystem) {\n        return (\n            <div key={key} className=\"chat-balloon text-center\">\n                <div className=\"chat-balloon--author chat-system\">{chat.author}</div>\n                <div>\n                    <div className=\"chat-balloon--wrapper d-inline-block\">\n                        <div\n                            className={classNames('chat-balloon--box chat-system', {\n                                'chat-balloon--box-image': imageUri,\n                            })}\n                        >\n                            {renderContents({ chat, imageUri })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    if (isFromMe === false) {\n        return (\n            <div key={key} className=\"chat-balloon text-left\">\n                <div className=\"chat-balloon--author chat-opponent\">{chat.author}</div>\n                <div>\n                    <div className=\"chat-balloon--wrapper d-inline-block\">\n                        <div\n                            className={classNames('chat-balloon--box chat-opponent', {\n                                'chat-balloon--box-image': imageUri,\n                            })}\n                        >\n                            {renderContents({ chat, imageUri })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div key={key} className=\"chat-balloon text-right\">\n            <div className=\"chat-balloon--author\">{chat.author}</div>\n            <div className=\"chat-balloon--wrapper\">\n                <div\n                    className={classNames('chat-balloon--box', {\n                        'chat-balloon--box-image': imageUri,\n                    })}\n                >\n                    {renderContents({ chat, imageUri })}\n                </div>\n            </div>\n        </div>\n    );\n};\n","export const conversations: {\n    author: string;\n    text?: string;\n    link?: string;\n    imageUri?: string;\n}[][] = [\n    [\n        {\n            author: 'SYSTEM',\n            text: 'HI. Tom, an automated chat-bot, will be with you shortly to assist you.',\n        },\n        {\n            author: 'Tom',\n            text:\n                'Hi! I’m Tom, an automated chat-bot. I’m happy to help you with your purchase. We have all different types of cameras, from inexpensive digital compacts to high-end DSLRs.\\n' +\n                'In order to ensure that I make the most suitable recommendations for you, I’d like to ask you some questions.',\n        },\n        {\n            author: 'Tom',\n            text: 'Is this purchase for you or is this a gift?',\n        },\n    ],\n    [\n        {\n            author: 'Tom',\n            text:\n                'Okay, so, you’d like to buy a camera *meorgift*. I’d be glad to help you find a camera.',\n        },\n        {\n            author: 'Tom',\n            text:\n                'What type of camera are you looking for? Are you looking for a point-and-shoot camera or DSLR?',\n        },\n        // {\n        //     author: 'Tom',\n        //     imageUri: '/image/notebooks1.png',\n        // },\n    ],\n    [\n        {\n            author: 'Tom',\n            text:\n                'Okay, so you are looking for a *camera/type* camera *meorgift*. Okay, let me ask another question.',\n        },\n        {\n            author: 'Tom',\n            text: 'Which brand do you prefer? We have \"Nikon\", \"Sony\", \"Canon\".',\n        },\n    ],\n    [\n        {\n            author: 'Tom',\n            text: 'Okay, Great choice!',\n        },\n        {\n            author: 'Tom',\n            text: 'What is your price range? Over $1700? Or Below $1700?',\n        },\n    ],\n    [\n        {\n            author: 'Tom',\n            text: 'Okay, you’d like to buy a *camera/brand* camera *camera/price* $1700.',\n        },\n        {\n            author: 'Tom',\n            text: 'Please give me a moment, and I’ll look for the best digital camera for you.',\n        },\n        {\n            author: 'Tom',\n            text:\n                'Based on your preferences, I’ve located the best digital camera. Please see the following details about the digital camera.',\n        },\n        {\n            author: 'Tom',\n            text:\n                'We at Digital World hope you’ll like this recommendation and that our advice will help you make an informed decision about which camera best fits your needs.',\n        },\n        {\n            author: 'Tom',\n            text: '*camera-choice-space*',\n        },\n        {\n            author: 'Tom',\n            text: 'Thank you!',\n        },\n    ],\n];\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Modal from 'react-bootstrap/Modal';\nimport { ChatBalloon } from './component/ChatBalloon';\nimport { conversations } from './data/converstaion';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport qs from 'qs';\n\nconst INTERVAL_TIME = 3100;\n\nconst convertConversation = (e: any) => {\n    if ((e.text || '').trim() === '*camera-choice-space*') {\n        const brand = _.toLower(localStorage.getItem('camera/brand') || '');\n        const price = localStorage.getItem('camera/price');\n        if (brand === 'sony') {\n            if (price === 'below') {\n                e.text = '[Sony] please click this';\n                e.link =\n                    'https://www.amazon.com/Sony-Cyber-shot-DSC-W800-Digital-Camera/dp/B00KJX57I8/ref=sr_1_3?dchild=1&keywords=Sony+DSCW800%2FB+20.1+MP+Digital+Camera+%28Black&qid=1599960270&sr=8-3';\n                e.imageUri = '/image/sony-below-1700.png';\n            } else {\n                e.text = '[Sony] please click this';\n                e.link =\n                    'https://www.amazon.com/Sony-Full-Frame-Mirrorless-Interchangeable-Lens-Optical/dp/B07YQJ9392/ref=sr_1_1?dchild=1&keywords=Sony+a7+III+Full-Frame+Mirrorless+Interchangeable-Lens+Camera+Optical+with+3-Inch+LCD%2C+Black+%28ILCE7M3%2FB%29&qid=1599960502&sr=8-1';\n                e.imageUri = '/image/sony-over-1700.png';\n            }\n        } else if (brand === 'nikon') {\n            if (price === 'below') {\n                e.text = '[Nikon] please click this';\n                e.link =\n                    'https://www.amazon.com/Nikon-COOLPIX-Digital-Camera-Built/dp/B08B6HSPXC/ref=sr_1_2?dchild=1&amp;keywords=nikon+under+1700&amp;qid=1612317538&amp;rnid=2941120011&amp;s=electronics&amp;sr=1-2';\n                e.imageUri = '/image/nikon-below-v2.png';\n            } else {\n                e.text = '[Nikon] please click this';\n                e.link =\n                    'https://www.amazon.com/Nikon-FX-Format-Mirrorless-Camera-Body/dp/B07GPRBGQ2/ref=sr_1_3?dchild=1&keywords=2.+Product%3A+Nikon+Z6+Full+Frame+Mirrorless+Camera+Body&qid=1599960926&sr=8-3';\n                e.imageUri = '/image/nikon-over-1700.png';\n            }\n        } else if (brand === 'canon') {\n            if (price === 'below') {\n                e.text = '[Canon] please click this';\n                e.link =\n                    'https://www.amazon.com/Canon-PowerShot-Digital-Camera-Accessory/dp/B071NPXMLJ/ref=sr_1_5?dchild=1&keywords=Canon+-+PowerShot+SX540HS+20.3-Megapixel+Digital+Camera+-+Black&qid=1599960773&sr=8-5';\n                e.imageUri = '/image/canon-below-1700.png';\n            } else {\n                e.text = '[Canon] please click this';\n                e.link =\n                    'https://www.amazon.com/Canon-Mark-Frame-Digital-Camera/dp/B01KURGS9E/ref=sr_1_1?dchild=1&amp;keywords=Canon+DSLR+over+%241700&amp;qid=1612317435&amp;sr=8-1';\n                e.imageUri = '/image/canon-over-v2.png';\n            }\n        }\n\n        return e;\n    }\n    e.text = (e.text || '').replace('*meorgift*', `${localStorage.getItem('meorgift')}`);\n    e.text = (e.text || '').replace(\n        '*camera/type*',\n        `${localStorage.getItem('camera/type') || 'DSLR'}`,\n    );\n    e.text = (e.text || '').replace('*camera/price*', `${localStorage.getItem('camera/price')}`);\n    e.text = e.text.replace(\n        '*camera/brand*',\n        _.upperFirst(localStorage.getItem('camera/brand') || ''),\n    );\n    return e;\n};\n\nconst App: React.FC = () => {\n    const inputEl = useRef(null);\n    const chatContainerEl = useRef(null);\n    const chatContainerBottomEl = useRef(null);\n    const [conversation, setConversation] = useState([] as any);\n    const [disableInput, setDisableInput] = useState(false);\n    const [step, setStep] = useState(0);\n    const [showModal, setShowModal] = useState(false);\n    const [imageType, setImageType] = useState('1');\n\n    const init = async () => {\n        const queryString = qs.parse(window.location.search, { ignoreQueryPrefix: true });\n        if (queryString && queryString.imageType && queryString.imageType.toString) {\n            setImageType(queryString.imageType.toString() as any);\n        }\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    useEffect(() => {\n        if (!disableInput && inputEl && inputEl.current) {\n            (inputEl.current as any).focus();\n        }\n    }, [inputEl, disableInput]);\n    const openModal = useCallback(() => {\n        setTimeout(() => {\n            setDisableInput(true);\n            conversations[0].forEach((c, i) => {\n                setTimeout(() => {\n                    setConversation(conversations[0].slice(0, i + 1));\n                    scrollToBottom();\n                    if (i === conversations[0].length - 1) {\n                        setDisableInput(false);\n                    }\n                }, i * INTERVAL_TIME);\n            });\n        }, 300);\n        setShowModal(true);\n    }, []);\n    const closeModal = useCallback(() => setShowModal(false), []);\n    const scrollToBottom = () => {\n        setTimeout(\n            () => (chatContainerBottomEl.current as any).scrollIntoView({ behavior: 'smooth' }),\n            500,\n        );\n    };\n    const sendMessage = useCallback(() => {\n        const value: string = (inputEl && inputEl.current && (inputEl.current as any).value) as any;\n        if (!value) {\n            return;\n        }\n\n        try {\n            setDisableInput(true);\n            (inputEl.current as any).value = '';\n\n            if (\n                value.toLowerCase() === 'sony' ||\n                value.toLowerCase() === 'nikon' ||\n                value.toLowerCase() === 'canon'\n            ) {\n                localStorage.setItem('camera/brand', value);\n            }\n            if (value.toLowerCase() === 'cannon') {\n                localStorage.setItem('camera/brand', 'canon');\n            }\n            const number = parseInt(value.replace(/\\D/g, ''), 10);\n            if (\n                value.toLowerCase().includes('me') ||\n                value.toLowerCase().includes('mine') ||\n                value.toLowerCase().includes('my')\n            ) {\n                localStorage.setItem('meorgift', 'for you');\n            }\n            if (value.toLowerCase().includes('gift')) {\n                localStorage.setItem('meorgift', 'as a gift');\n            }\n            if (value.toLowerCase().includes('dslr') || value.toLowerCase().includes('digital')) {\n                localStorage.setItem('camera/type', 'DSLR');\n            }\n            if (\n                value.toLowerCase().includes('point') ||\n                value.toLowerCase().includes('point and shoot') ||\n                value.toLowerCase().includes('point-and-shoot')\n            ) {\n                localStorage.setItem('camera/type', 'point-and-shoot');\n            }\n            if (\n                value.toLowerCase().includes('below') ||\n                value.toLowerCase().includes('under') ||\n                (number < 1700 && number > 100)\n            ) {\n                localStorage.setItem('camera/price', 'below');\n            }\n            if (value.toLowerCase().includes('over') || (number > 1700 && number < 99999999)) {\n                localStorage.setItem('camera/price', 'over');\n            }\n\n            const conversationWithMine = conversation.concat({ author: 'Me', text: value });\n            setConversation(conversationWithMine);\n            scrollToBottom();\n            setTimeout(() => {\n                let currentConversation = conversationWithMine;\n                if (!conversations[step + 1]) {\n                    setDisableInput(false);\n                    scrollToBottom();\n                    return;\n                }\n\n                conversations[step + 1].forEach((m, i) => {\n                    setTimeout(() => {\n                        const c = conversations[step + 1]\n                            .slice(0, i + 1)\n                            .map(e => convertConversation(e));\n                        setConversation(currentConversation.concat(c));\n                        scrollToBottom();\n                        if (i === conversations[step + 1].length - 1) {\n                            setDisableInput(false);\n                        }\n                    }, i * INTERVAL_TIME);\n                });\n                setStep(step + 1);\n                scrollToBottom();\n            }, INTERVAL_TIME);\n        } catch (err) {\n            console.error(err);\n            setDisableInput(false);\n        }\n    }, [step, conversation, inputEl]);\n\n    return (\n        <div className=\"App\">\n            <div className=\"App-bg\">\n                <div className=\"logo\" />\n                <div className=\"mainCamera-container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-5 camera-bg\" />\n                        <div className=\"col-sm-7\">\n                            <div className=\"mx-5 mt-5 mb-3\">\n                                <h3 className=\"mainMessage\">Find Your Perfect Camera</h3>\n                            </div>\n                            <div className=\"mx-5 mt-2 mb-2\">\n                                <h5 className=\"subMessage\">\n                                    Start counseling with our AI agent Tom for great recommendations\n                                    on digital cameras, from point and shoot to DSLR.\n                                </h5>\n                            </div>\n                            <p className=\"mx-5 mt-4 mb-2 text-left\">\n                                <div className=\"button main-button\" onClick={() => openModal()}>\n                                    START CONVERSATION\n                                </div>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row my-5 py-5 mx-0 my-0\">&nbsp;</div>\n            </div>\n            {/*<div className=\"App-overlay\" />*/}\n            {showModal && (\n                <div\n                    className=\"App-container\"\n                    // onClick={() => !showModal && alert('쇼핑 기능 준비 중')}\n                >\n                    <div>\n                        {/*<div*/}\n                        {/*    className={classNames('keyword-box', { 'display-none': showModal })}*/}\n                        {/*    onClick={e => e.stopPropagation()}*/}\n                        {/*>*/}\n                        {/*    {keywords.map(e => (*/}\n                        {/*        <Keyword key={e} text={e} onClick={() => openModal()} />*/}\n                        {/*    ))}*/}\n                        {/*</div>*/}\n                        <Modal\n                            size=\"lg\"\n                            show={showModal}\n                            onHide={() => closeModal()}\n                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                            onClick={(e: any) => e.stopPropagation()}\n                            animation={false}\n                        >\n                            <Modal.Body>\n                                <div\n                                    className={classNames('avatar-image', {\n                                        'avatar-image2': imageType === '2',\n                                        'avatar-image3': imageType === '3',\n                                        'avatar-image4': imageType === '4',\n                                        'avatar-image5': imageType === '5',\n                                    })}\n                                />\n                                <div ref={chatContainerEl} className=\"chat-container\">\n                                    {conversation\n                                        .filter((e: any) => e && e.author)\n                                        .map((e: any) => convertConversation(e))\n                                        .map((e: any, i: number) => (\n                                            <ChatBalloon\n                                                key={`chat-${i}`}\n                                                isSystem={e.author.toUpperCase() === 'SYSTEM'}\n                                                isFromMe={e.author.toUpperCase() === 'ME'}\n                                                chat={e}\n                                            />\n                                        ))}\n                                    {disableInput && (\n                                        <div className=\"chat-processing\">\n                                            <ChatBalloon\n                                                key={`chat-loading`}\n                                                isSystem={false}\n                                                isFromMe={false}\n                                                chat={{ text: 'loading...' }}\n                                            />\n                                        </div>\n                                    )}\n                                    <div ref={chatContainerBottomEl} />\n                                </div>\n                            </Modal.Body>\n                            <div\n                                className={classNames('chat-input-box', {\n                                    disableInput: disableInput,\n                                })}\n                            >\n                                <input\n                                    ref={inputEl}\n                                    disabled={disableInput}\n                                    onKeyDown={e => {\n                                        if (e.key === 'Enter') {\n                                            sendMessage();\n                                        }\n                                    }}\n                                    onSubmit={() => sendMessage()}\n                                />\n                                <div className=\"search-btn\" onClick={() => sendMessage()}>\n                                    <div className=\"search-icon\" />\n                                </div>\n                            </div>\n                        </Modal>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href,\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}